{
  "name": "@symindx/mind-agents",
  "version": "1.0.0",
  "description": "SYMindX Core Agent Runtime System",
  "main": "dist/index.js",
  "exports": {
    ".": "./dist/index.js",
    "./api": "./dist/api.js",
    "./core/*": "./dist/core/*.js",
    "./types/*": "./dist/types/*.js",
    "./utils/*": "./dist/utils/*.js",
    "./modules/*": "./dist/modules/*.js",
    "./extensions/*": "./dist/extensions/*.js",
    "./portals/*": "./dist/portals/*.js"
  },
  "type": "module",
  "workspaces": [
    "./src/portals/openai",
    "./src/portals/anthropic",
    "./src/portals/groq",
    "./src/portals/xai",
    "./src/portals/google-generative",
    "./src/portals/google-vertex",
    "./src/portals/azure-openai",
    "./src/portals/mistral",
    "./src/portals/cohere",
    "./src/portals/perplexity",
    "./src/portals/vercel",
    "./src/portals/ollama",
    "./src/portals/lmstudio",
    "./src/portals/openrouter",
    "./src/portals/kluster.ai",
    "./src/portals/multimodal",
    "./src/modules/memory",
    "./src/modules/memory/providers/sqlite",
    "./src/modules/memory/providers/postgres",
    "./src/modules/memory/providers/supabase",
    "./src/modules/memory/providers/neon",
    "./src/modules/emotion",
    "./src/modules/emotion/happy",
    "./src/modules/emotion/sad",
    "./src/modules/emotion/angry",
    "./src/modules/emotion/confident",
    "./src/modules/emotion/neutral",
    "./src/modules/cognition",
    "./src/modules/cognition/htn-planner",
    "./src/modules/cognition/reactive",
    "./src/modules/cognition/hybrid",
    "./src/modules/cognition/theory-of-mind",
    "./src/modules/cognition/unified",
    "./src/extensions/api",
    "./src/extensions/telegram",
    "./src/extensions/mcp-server",
    "./src/extensions/mcp-client",
    "./src/extensions/communication",
    "./src/extensions/runelite"
  ],
  "scripts": {
    "preinstall": "echo 'ðŸ“¦ Installing workspace dependencies...'",
    "postinstall": "echo 'âœ… All dependencies installed successfully!'",
    "prepare": "husky install",
    "prebuild": "cd .. && bun install",
    "build": "bun scripts/bun-build.ts",
    "build:clean": "rm -rf dist && bun run build",
    "build:watch": "bun scripts/bun-build.ts --watch",
    "prestart": "[ ! -d dist ] && npm run build || true",
    "start": "bun dist/index.js",
    "start:cli": "bun dist/cli/index.js",
    "start:ink": "bun dist/cli/ink-cli.js",
    "start:daemon": "nohup bun dist/index.js > /dev/null 2>&1 & echo $! > .symindx.pid && echo 'SYMindX Runtime started as daemon (PID: '$(cat .symindx.pid)')'",
    "stop:daemon": "if [ -f .symindx.pid ]; then kill $(cat .symindx.pid) && rm .symindx.pid && echo 'SYMindX Runtime daemon stopped'; else echo 'No daemon PID file found'; fi",
    "predev": "cd .. && bun install",
    "dev": "concurrently \"tsc -w --skipLibCheck\" \"bun --watch dist/index.js\"",
    "test": "jest",
    "test:coverage": "jest --coverage",
    "test:watch": "jest --watch",
    "test:ci": "jest --ci --coverage --maxWorkers=2",
    "lint": "eslint src --ext .ts,.tsx,.js,.jsx",
    "lint:fix": "eslint src --ext .ts,.tsx,.js,.jsx --fix",
    "format": "prettier --write \"src/**/*.{ts,tsx,js,jsx,json,md}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,js,jsx,json,md}\"",
    "type-check": "tsc --noEmit --incremental --tsBuildInfoFile ./dist/.tsbuildinfo",
    "type-check:watch": "tsc --noEmit --watch --incremental --tsBuildInfoFile ./dist/.tsbuildinfo",
    "pre-commit": "lint-staged",
    "validate": "npm run type-check && npm run lint && npm run format:check",
    "cli": "bun --loader ts-node/esm src/cli/ink-cli.tsx",
    "cli:dashboard": "bun --loader ts-node/esm src/cli/ink-cli.tsx dashboard",
    "cli:agents": "bun --loader ts-node/esm src/cli/ink-cli.tsx agents",
    "cli:status": "bun --loader ts-node/esm src/cli/ink-cli.tsx status",
    "agent": "bun src/cli/api-cli.ts",
    "agent:list": "bun src/cli/api-cli.ts agent list",
    "agent:start": "bun src/cli/api-cli.ts agent start",
    "agent:stop": "bun src/cli/api-cli.ts agent stop",
    "status": "tsx src/cli/api-cli.ts status",

    "sync-versions": "bun scripts/sync-module-versions.js",
    "workspace:list": "echo 'Installed workspaces:' && find src -name package.json -not -path '*/node_modules/*' | sort",
    "workspace:clean": "find . -name 'node_modules' -type d -prune -exec rm -rf {} + && rm -f bun.lockb",
    "workspace:check": "bun scripts/check-workspace-deps.js"
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  },
  "dependencies": {
    "@ai-sdk/anthropic": "^1.2.12",
    "@ai-sdk/azure": "^1.3.24",
    "@ai-sdk/cohere": "^1.2.10",
    "@ai-sdk/google": "^1.2.22",
    "@ai-sdk/google-vertex": "^2.2.27",
    "@ai-sdk/groq": "^1.2.9",
    "@ai-sdk/mistral": "^1.2.8",
    "@ai-sdk/openai": "^1.3.23",
    "@ai-sdk/perplexity": "^1.1.9",
    "@ai-sdk/xai": "^1.2.17",
    "@modelcontextprotocol/sdk": "^1.12.1",
    "@neondatabase/serverless": "^1.0.0",
    "@slack/bolt": "^4.0.0",
    "@slack/web-api": "^7.8.0",
    "@supabase/supabase-js": "^2.49.10",
    "@types/puppeteer": "^5.4.7",
    "ai": "^5.0.0-canary.24",

    "boxen": "^8.0.1",
    "chalk": "^5.3.0",
    "cli-table3": "^0.6.5",
    "commander": "^12.0.0",
    "concurrently": "^9.1.0",
    "cors": "^2.8.5",
    "dotenv": "^16.4.7",
    "express": "^5.0.1",
    "express-rate-limit": "^7.5.0",
    "helmet": "^7.1.0",
    "ink": "^5.0.1",

    "inquirer": "^12.7.0",
    "isomorphic-dompurify": "^2.16.0",
    "jsonwebtoken": "^9.0.2",
    "ora": "^8.2.0",
    "pako": "^2.1.0",
    "pg": "^8.16.0",
    "puppeteer": "^24.10.0",
    "react": "^18.3.1",
    "react-devtools-core": "^6.1.5",
    "sqlstring": "^2.3.3",
    "subscriptions-transport-ws": "^0.11.0",
    "twitter-api-v2": "^1.18.0",
    "uuid": "^11.0.0",
    "ws": "^8.18.2",
    "zod": "^3.24.0"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@testing-library/jest-dom": "^6.1.5",
    "@testing-library/react": "^14.1.2",
    "@types/better-sqlite3": "^7.6.13",
    "@types/blessed": "^0.1.25",
    "@types/bun": "^1.2.19",
    "@types/cors": "^2.8.19",
    "@types/express": "^5.0.0",
    "@types/figlet": "^1.7.0",
    "@types/helmet": "^4.0.0",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/sqlstring": "^2.3.2",
    "@types/graphql": "^14.5.0",
    "@types/inquirer": "^9.0.0",
    "@types/jest": "^30.0.0",
    "@types/node": "^22.15.34",
    "@types/pako": "^2.0.3",
    "@types/react": "^18.3.12",
    "@types/supertest": "^2.0.16",
    "@types/uuid": "^10.0.0",
    "@types/ws": "^8.5.15",
    "@typescript-eslint/eslint-plugin": "^8.36.0",
    "@typescript-eslint/parser": "^8.36.0",
    "axios": "^1.6.2",
    "eslint": "^9.30.1",
    "eslint-config-prettier": "^10.1.5",
    "eslint-import-resolver-typescript": "^4.4.4",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-prettier": "^5.5.1",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "glob": "^11.0.3",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "jest-html-reporter": "^3.10.2",
    "jest-junit": "^16.0.0",
    "jest-mock-extended": "^3.0.5",
    "lint-staged": "^16.1.2",
    "prettier": "^3.6.2",
    "supertest": "^6.3.3",
    "ts-jest": "^29.2.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.0",

    "pixelmatch": "^5.3.0",
    "pngjs": "^7.0.0"
  }
}
